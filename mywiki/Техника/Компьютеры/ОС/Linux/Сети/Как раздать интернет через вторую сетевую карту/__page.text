!! Как раздать интернет через вторую сетевую карту

Дано:
Сетевая карточка eth0 подключенная с помощью PPPoE к интернету и eth1 подключенная к сети с адресом 192.168.0.1 к которой подключена сеть с адресами 192.168.0.* в которой нужно раздать интернет.

Для начала включим форвардинг:

@@
echo 1 > /proc/sys/net/ipv4/ip_forward
@@

Чтобы форвардинг автоматически включался при запуске системы

Открываем файл:

@@
sudo nano /etc/sysctl.conf
@@

и добавляем в него строчку:

@@
net.ipv4.ip_forward = 1
@@

Затем включаем NAT

@@
iptables -t nat -A POSTROUTING -o ppp0 -j MASQUERADE
@@

Где ppp0 название вашего интерфейса через который выходите в интернет.

Чтобы NAT работал после перезагрузки делаем следующее:

сохраняем настройки iptables в файл

@@
sudo iptables-save > /etc/iptables.up.rules
@@

И добавляем в конец файла:

@@
sudo nano /etc/networks/interfaces
@@

эту строчку, для автоматической подгрузке правил

@@
pre-up iptables-restore < /etc/iptables.up.rules
@@

Так же в этот файл добавляем правила роутинга:

@@
up route add -net 192.168.0.0 netmask 255.255.255.0 dev eth1
up route add -net 0.0.0.0 netmask 255.255.255.255 dev eth0
@@

Chromium и kwalletNetHogs: мониторинг трафика по отдельным процессам

!!! Комментарии

ну если еще и ррр0...
тогда так

@@
#!/bin/sh
PATH=/usr/sbin:/sbin:/bin:/usr/bin

#
# delete all existing rules.
#
iptables -F
iptables -t nat -F
iptables -t mangle -F
iptables -X

# Always accept loopback traffic
iptables -A INPUT -i lo -j ACCEPT

# Allow established connections, and those not coming from the outside
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -m state --state NEW -i ! ppp0 -j ACCEPT
iptables -A FORWARD -i ppp0 -o eth1 -m state --state ESTABLISHED,RELATED -j ACCEPT

# Allow outgoing connections from the LAN side.
iptables -A FORWARD -i eth1 -o ppp0 -j ACCEPT

# Masquerade.
iptables -t nat -A POSTROUTING -o ppp0 -j MASQUERADE

# Don't forward from the outside to the inside.
iptables -A FORWARD -i ppp0 -o ppp0 -j REJECT
iptables -A FORWARD -i eth0 -o ppp0 -j REJECT
# Enable routing.
echo 1 > /proc/sys/net/ipv4/ip_forward
@@

ЗЫ кидаем этот файлик с любым названием в /etc/network/if-up.d/

----

создал файлег, че-та ноут (WinXP)у меня не может подключиться к сети - адрес не назначается,
в командной строке вот чего:
stranger@stranger-desktop:~$ sudo su
[sudo] password for stranger:
root@stranger-desktop:/home/stranger# sh /etc/network/if-up.d/routing.shUsing intrapositioned negation (`--option ! this`) is deprecated in favor of extrapositioned (`! --option this`).
root@stranger-desktop:/home/stranger# sh /etc/network/if-up.d/routing.sh start
Using intrapositioned negation (`--option ! this`) is deprecated in favor of extrapositioned (`! --option this`).
Скрипт вот он:
#!/bin/sh
PATH=/usr/sbin:/sbin:/bin:/usr/bin
#
# delete all existing rules.
#
iptables -F
iptables -t nat -F
iptables -t mangle -F
iptables -X
# Always accept loopback traffic
iptables -A INPUT -i lo -j ACCEPT
# Allow established connections, and those not coming from the outside
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -m state --state NEW -i ! tap0 -j ACCEPT
iptables -A FORWARD -i tap0 -o eth1 -m state --state ESTABLISHED,RELATED -j ACCEPT
# Allow outgoing connections from the LAN side.
iptables -A FORWARD -i eth1 -o tap0 -j ACCEPT
# Masquerade.
iptables -t nat -A POSTROUTING -o tap0 -j MASQUERADE
# Don't forward from the outside to the inside.
iptables -A FORWARD -i tap0 -o tap0 -j REJECT
iptables -A FORWARD -i eth0 -o tap0 -j REJECT
# Enable routing.
echo 1 > /proc/sys/net/ipv4/ip_forward
интернет - на интерфейсе tap0

----

А что ещё прописать в правило, чтобы помимо конкретного интерфейса ещё и через конкретный IP адрес NAT илось ?

Тогда использовать SNAT вместо MASQUERADE

@@
 -j SNAT --to-source $ip
@@

Правда, если у тебя ip динамический то тебе придется каждый раз переписывать сие правило.

----

А как выключить NАТ ? Т.е. обратный процесс этому всему.

Т.е. понастраивал я это все себе правил в iptables понаписал, все прекрасно работало и ладно. А теперь "расшаривание интернета не требуется". Как это всё потереть.

из консоли: echo 0 > /proc/sys/net/ipv4/ip_forward
из консоли: sudo nano /etc/sysctl.conf
удаляем строку: net.ipv4.ip_forward = 1
из консоли: sudo iptables -F
из консоли: sudo iptables-save > /etc/iptables.up.rules
sudo nano /etc/networks/interfaces - удаляем строки
pre-up iptables-restore < /etc/iptables.up.rules
up route add -net 192.168.0.0 netmask 255.255.255.0 dev eth1
up route add -net 0.0.0.0 netmask 255.255.255.255 dev eth0
все :) это я тупо проделал все действия наоборот :)
iptables -F - удаляет все правила
в итоге будет как свежей кубунте.
файл /etc/iptables.up.rules вероятно будет пустой. и его можно будет удалить

----

iptables -F - удаляет все правила

@@
man iptables
@@

-F, --flush [chain]

Flush the selected chain (all the chains in the table if none is given). {+This is equivalent to deleting all the rules one by one.+}

Как я при беглом чтении не заметил подчёркнутую строку... Что делает эта строка ? Восстанавливает iptables ? 

@@
pre-up iptables-restore &lt; /etc/iptables.up.rules
@@

Точнее, что значит тут pre-up, -пред запуск ?

@@
$ man pre-up
No manual entry for pre-up
@@

pre-up, post-up, pre-down, post-down - очень интересные штуки. Они указывают какие команды нужно запустить до, после включения и отключения интерфейсов.

Например, после поднятия ppp0 можно организовать чтобы автоматом включилась аська, торент начал докачивать порево, амарок включил музон.... ну я думаю мысля ясна.

p.s.
iptables-save - выводит текущие правила фаервола на стандартный вывод: на экран (название обманчивое. эта команда ничего нигде не сохраняет). Сохранять нужно "вручную": сохранить текущие настройки фаера в файл (iptables-save >> /etc/MySuperRules) и потом восстановить их (iptables-restore << /etc/MySuperRules) . После перезагрузки системы, настройки фаера обнуляются и чтобы постоянно не вбивать команды в консоли их впихивают в автозагрузку (правильнее конечно в interfaces pre-up или post-up).

p.s.
А man нужно смотреть не для pre-up, а для interfaces

@@
$ sudo su
# echo 0 > /proc/sys/net/ipv4/ip_forward
@@

# command и $ sudo command Это конечто одно и тоже. Но когда делается перенаправдение вывода (">") то оно делается с правами основного пользователя

То есть когда делаешь sudo echo 0 > /proc/sys/net/ipv4/ip_forward то собственно отоборажение единички происходит от рута, а вот помещение ее в файл - от обычного пользователя. По этому и недостаточно прав.

А решить это можно несколькими способами:

@@
sudo su -c "echo 0 > /proc/sys/net/ipv4/ip_forward"
echo 0 > sudo tee /proc/sys/net/ipv4/ip_forward
@@

и тд

Настройки хранятся в /etc/sysctl.conf. Для их изменения используется утилита sysctl. И не нужно выдумывать новых путей.

- посмотреть все настройки

@@
sysctl -a
@@

- посмотреть настройки только для одного параметра

@@
sysctl net.ipv4.ip_forward
@@

(как всегда для продолжения названия параметра работает наш любимый TAB)

- изменить настройки

@@
sudo sysctl net.ipv4.ip_forward=1
@@

----

Имею компьютер с ubuntu desk top 9.04, он подключен к интернету через adsl модем, который сам (модем) настроен на авто залогинивание у провайдера с предоставлением логина и пароля и передает уже готовый интернет на сетевую карту eth1.  Вторая сетевая карта называется eth6 и смотрит в локальную сеть. 

Настройки eth1 такие: адрес - 192.168.211.199 маска - 255.255.255.0 шлюз - 192.168.211.33 dns - 192.168.1.1

Как раздавать интернет всем компам локальной сети с присвоением каждому компу автоматического ip адреса и автоматического dns?

Что прописать в настройках eth6?

dhcp включить на одной карте на других получить автоматически

а вроде так не может быть 192.168.21.199 маска - 255.255.255.0 шлюз - 192.168.211.33 наверно шлюз тоже 21 а не 211

# воткнуть все компы в модем. Если не хватает портов, купить свич.
# http://forum.ubuntu.ru/index.php?topic=3244.0
# поиск по форуму и не только ибо, по-моему, уже по 5 раз на дню появляются вопросы как поднять шлюз.

Есть ли у кого толковое описание как раздать интернет при помощи firestarter? У меня при использовании мастера он всегда выдает ошибку что устройство eth6 не готово, как нужно его подготовить?

@@
echo 1 >/proc/sys/net/ipv4/ip_forward
iptables -A FORWARD -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
iptables -t nat -A POSROUTING -s * -j MAQSUERADE
@@

* -- диапазон домашней локалки (192.168.0.0/24 например)

----

Реализовывать можно как в ручную так и с помощью скрипта, вот кстати и он:

@@
# Включаем форвардинг пакетов из одного сетевого интерфейса в другой ( сколько бы их не было)
echo 1 > /proc/sys/net/ipv4/ip_forward
#Для реализации NAT нужена программа под названием  iptables, проверьте есть ли она у вас и где она расположена

# which iptables
/sbin/iptables
Как раз то что нужно.
# Указываем интерфейс смотрящий в интернет (в нашем случае это eth0 )
/sbin/iptables –table nat –append POSTROUTING –o eth0 -j MASQUERADE
# Указываем интерфейс смотрящий в LAN
/sbin/iptables –append FORWARD –o eth1 -j ACCEPT
###
@@

Также  эти строки можно поместить в 1 файл, к примеру NAT.sh, положить его в каталог пользователя ROOT и сделать его исполняемым ‘chmod 755 ‘. Вот его содержимое:

@@
#!/bin/sh
echo 1 > /proc/sys/net/ipv4/ip_forward
/usr/sbin/iptables –append FORWARD –o eth0 -j ACCEPT
/usr/sbin/iptables –table nat –append POSTROUTING –o eth1 -j MASQUERADE
@@

Если вы хотите чтобы этот скрипт запускался при старте системы, поместите ссылку на него в файл

@@
# echo «/root/NAT.sh >> /etc/rc.local »
@@

После чего настройте сетевое соединение у клиента вашей локальной сети указав правильные IP/Netmask/GW, а так же DNS. Не помните DNS вашего провайдера? Используйте публичные к примеру от Google их адреса просто запомнить 8.8.8.8 и 8.8.4.4.

----

На втором в настройках сетевого подключения (указываются вручную) прописано:

IP-адрес: 192.168.0.2
Маска подсети: 255.255.255.0
Основной шлюз: 192.168.0.1
DNS-серверы: указываю провайдерские

На первом в Ubuntu подключение к провайдеру через USB у меня определяется как eth1, а сетевое подключение на второй комп — eth0.

eth1 настраиваю вручную (ввожу IP, маску сети, основной шлюз и DNS-сервера — их беру в Windows из сведений о подключении). Автоматическое подключение в Ubuntu у меня почему-то работает только до первой после установки перезагрузки (это уже не впервый раз, почему, пока не знаю).

Дальше настраиваю раздачу интернета (помогло это руководство):

@@
sudo ifconfig eth0 192.168.0.1 netmask 255.255.255.0
sudo ifconfig eth0 up
@@

Затем в файле /etc/sysctl.conf вписать строчку:

@@
net.ipv4.ip_forward=1
@@

(у меня она оказалась вписанной, нужно было её просто раскомментировать).

Команда, чтобы применить это правило до перезагрузки:

@@
sudo sysctl -w net.ipv4.ip_forward="1"
@@

(действительно, больше вводить её не понадобилось).

И последний шаг:

@@
sudo iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
@@

ifconfig и iptables приходится выполнять каждый раз после перезапуска Ubuntu. Вероятно, это можно автоматизировать, но пока не знаю как (настроить eth0 через графический интерфейс, как eth1, не получается — в этом случае интернет не работает). В общем, до окончательной ясности ещё далеко, но хорошо, что уже работает. Странно, почему то же не получалось раньше. Вроде бы то же самое проделывал, но не срабатывало.

Обн. 11.04.2010: Можно создать исполняемый файлик  /home/andrey/razdacha-ineta из четырёх строчек:

@@
#!/bin/sh
ifconfig eth0 192.168.0.1 netmask 255.255.255.0
ifconfig eth0 up
iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE,
и когда нужно раздать интернет, просто запускать его:
sudo ~/razdacha-ineta
@@