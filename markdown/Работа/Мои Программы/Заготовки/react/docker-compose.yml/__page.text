!! Services

(:childlist:)

----

!! docker-compose.yml

[@
version: '2'
services:
  # MongoDB server
  mongo:
    image: mongo
    volumes:
      - ./Mongo/data:/data/db
    ports:
      - '27017:27017'
  redis:
    image: redis:alpine
    volumes:
      - ./Redis/data:/data
    ports:
      - '6379:6379'
 service:
    image: <<BASE-IMAGE-DEV>>
    volumes:
      - ./src:/usr/src/app/src:rw
      - ./logs:/usr/src/app/logs:rw
      - ./.babelrc:/usr/src/app/.babelrc:rw
    ports:
      - 9393:9393
    command: nodemon src/backend/soap_service.js --watch src/ --exec ./node_modules/.bin/babel-node >> logs/service.log 2>&1
  jobs:
    image: <<BASE-IMAGE-DEV>>
    volumes:
      - ./src:/usr/src/app/src:rw
      - ./logs:/usr/src/app/logs:rw
      - ./.babelrc:/usr/src/app/.babelrc:rw
    command: nodemon src/backend/jobs.js --watch src/ --exec ./node_modules/.bin/babel-node >> logs/jobs.log 2>&1
  server:
    image: <<BASE-IMAGE-DEV>>
    volumes:
      - ./dist:/usr/src/app/dist:rw
      - ./src:/usr/src/app/src:rw
      - ./logs:/usr/src/app/logs:rw
      - ./.babelrc:/usr/src/app/.babelrc:rw
    ports:
      - 9091:9091
    command: ./node_modules/.bin/babel-watch --watch src/backend/ --use-polling src/backend/server.js >> logs/server.log 2>&1
    #   command: nodemon src/backend/server.js --watch src/ --exec ./node_modules/.bin/babel-node >> logs/server.log
  jobserver:
    image: <<BASE-IMAGE-DEV>>
    volumes:
      - ./dist:/usr/src/app/dist:rw
      - ./src:/usr/src/app/src:rw
      - ./logs:/usr/src/app/logs:rw
      - ./.babelrc:/usr/src/app/.babelrc:rw
      - ./.cron:/var/spool/cron/crontabs/root:rw
    # infinite life
    command: /usr/sbin/crond -f -L /usr/src/app/logs/cron.log
  webpack:
    image: <<BASE-IMAGE-DEV>>
    restart: always
    volumes:
      - ./src:/usr/src/app/src:rw
      - ./dist:/usr/src/app/dist:rw
      - ./webpack.config.js:/usr/src/app/webpack.config.js:rw
      - ./.babelrc:/usr/src/app/.babelrc:rw
      - ./postcss.config.js:/usr/src/app/postcss.config.js:rw
    command: npm run build-dev
  proxy:
    image: nginx:alpine
    restart: always
    ports:
      - 80:80
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./dist:/usr/share/nginx/html/dist
@]