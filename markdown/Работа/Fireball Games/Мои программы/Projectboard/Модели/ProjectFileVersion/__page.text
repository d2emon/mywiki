!! ProjectFileVersion

class ProjectFileVersion(models.Model):
    """A specific version of the file uploaded.
    file: file for which this revision was created.
    revision_name: Name under which this revision is saved.
    version_number = version number of the file uploaded. Starts at 1. Increments thereafter.
    user: The user who created this file.
    size: size of this file revision.
    """
    file = models.ForeignKey(ProjectFile)
    revision_name = models.CharField(max_length = 200)
    version_number = models.IntegerField()
    user = models.ForeignKey(User)
    size = models.IntegerField()
    created_on = models.DateTimeField(auto_now_add = 1)

    
    def get_name(self):
        #return '%s-%s' % (self.file.filename,self.version_number)
        return self.revision_name
    
    def get_real_name(self):
        return self.get_name()[1:]
    
    def get_s3_url(self):
        import secrets
        import S3
        import defaults
        gen = S3.QueryStringAuthGenerator(secrets.AWS_ID, secrets.AWS_SECRET_KEY)
        url = gen.get(defaults.bucket, self.get_real_name())
        return url
        
    def save(self):
        log = Log(text = "New revision for file %s has been created." % (self.filename, self.project.name), project = self.file.project)
        log.description = 'Revision was created on %s' % time.strftime('%d %B %y')
        log.save()
        last_version = self.file.projectfileversion_set.count()
        self.version_number = last_version + 1
        super(ProjectFileVersion, self).save()
    
    class Admin:
        pass
    
    class Meta:
        ordering = ('-version_number', )